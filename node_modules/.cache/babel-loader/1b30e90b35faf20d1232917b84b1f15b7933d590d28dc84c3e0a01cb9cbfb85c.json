{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\OneDrive\\\\Desktop\\\\App\\\\kanban-board\\\\src\\\\components\\\\TaskCard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = ({\n  id,\n  title,\n  description\n}) => {\n  _s();\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: 'TASK',\n    item: {\n      id\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    ref: drag,\n    style: {\n      opacity: isDragging ? 0.5 : 1,\n      marginBottom: '8px',\n      maxWidth: '300px'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useDrag","Card","CardContent","Typography","jsxDEV","_jsxDEV","TaskCard","id","title","description","_s","isDragging","drag","type","item","collect","monitor","ref","style","opacity","marginBottom","maxWidth","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vijay/OneDrive/Desktop/App/kanban-board/src/components/TaskCard.js"],"sourcesContent":["import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { Card, CardContent, Typography } from '@mui/material';\r\n\r\nconst TaskCard = ({ id, title, description }) => {\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: 'TASK',\r\n    item: { id },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  return (\r\n    <Card ref={drag} style={{ opacity: isDragging ? 0.5 : 1, marginBottom: '8px', maxWidth:'300px' }}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\">{title}</Typography>\r\n        <Typography variant=\"body2\">{description}</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAAC;IAAEC;EAAW,CAAC,EAAEC,IAAI,CAAC,GAAGZ,OAAO,CAAC,OAAO;IAC5Ca,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;MAAEP;IAAG,CAAC;IACZQ,OAAO,EAAGC,OAAO,KAAM;MACrBL,UAAU,EAAE,CAAC,CAACK,OAAO,CAACL,UAAU,CAAC;IACnC,CAAC;EACH,CAAC,CAAC,CAAC;EAEH,oBACEN,OAAA,CAACJ,IAAI;IAACgB,GAAG,EAAEL,IAAK;IAACM,KAAK,EAAE;MAAEC,OAAO,EAAER,UAAU,GAAG,GAAG,GAAG,CAAC;MAAES,YAAY,EAAE,KAAK;MAAEC,QAAQ,EAAC;IAAQ,CAAE;IAAAC,QAAA,eAC/FjB,OAAA,CAACH,WAAW;MAAAoB,QAAA,gBACVjB,OAAA,CAACF,UAAU;QAACoB,OAAO,EAAC,IAAI;QAAAD,QAAA,EAAEd;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC7CtB,OAAA,CAACF,UAAU;QAACoB,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAEb;MAAW;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX,CAAC;AAACjB,EAAA,CAjBIJ,QAAQ;EAAA,QACmBN,OAAO;AAAA;AAAA4B,EAAA,GADlCtB,QAAQ;AAmBd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}