{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\OneDrive\\\\Desktop\\\\App\\\\kanban-board\\\\src\\\\components\\\\KanbanBoard.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Grid } from '@mui/material';\nimport Column from './Column';\nconst KanbanBoard = () => {\n  const tasks = useSelector(state => state.tasks);\n  const stages = ['To Do', 'In Progress', 'Peer Review', 'Done'];\n  const getTasksByStage = stage => tasks.filter(task => task.stage === stage);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, stages.map(stage => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 3,\n    key: stage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    title: stage,\n    tasks: getTasksByStage(stage),\n    stage: stage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default KanbanBoard;","map":{"version":3,"names":["React","useSelector","Grid","Column","KanbanBoard","tasks","state","stages","getTasksByStage","stage","filter","task","createElement","container","spacing","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","item","xs","sm","md","key","title"],"sources":["C:/Users/vijay/OneDrive/Desktop/App/kanban-board/src/components/KanbanBoard.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid } from '@mui/material';\r\nimport Column from './Column';\r\n\r\nconst KanbanBoard = () => {\r\n  const tasks = useSelector(state => state.tasks);\r\n\r\n  const stages = ['To Do', 'In Progress', 'Peer Review', 'Done'];\r\n\r\n  const getTasksByStage = (stage) => tasks.filter(task => task.stage === stage);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {stages.map(stage => (\r\n        <Grid item xs={12} sm={6} md={3} key={stage}>\r\n          <Column title={stage} tasks={getTasksByStage(stage)} stage={stage} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,IAAI,QAAQ,eAAe;AACpC,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,KAAK,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC;EAE/C,MAAME,MAAM,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,CAAC;EAE9D,MAAMC,eAAe,GAAIC,KAAK,IAAKJ,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACF,KAAK,KAAKA,KAAK,CAAC;EAE7E,oBACET,KAAA,CAAAY,aAAA,CAACV,IAAI;IAACW,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxBb,MAAM,CAACc,GAAG,CAACZ,KAAK,iBACfT,KAAA,CAAAY,aAAA,CAACV,IAAI;IAACoB,IAAI;IAACC,EAAE,EAAE,EAAG;IAACC,EAAE,EAAE,CAAE;IAACC,EAAE,EAAE,CAAE;IAACC,GAAG,EAAEjB,KAAM;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1CpB,KAAA,CAAAY,aAAA,CAACT,MAAM;IAACwB,KAAK,EAAElB,KAAM;IAACJ,KAAK,EAAEG,eAAe,CAACC,KAAK,CAAE;IAACA,KAAK,EAAEA,KAAM;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChE,CACP,CACG,CAAC;AAEX,CAAC;AAED,eAAehB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}