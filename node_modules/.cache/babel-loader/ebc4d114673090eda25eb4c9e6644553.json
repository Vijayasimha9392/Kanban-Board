{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\OneDrive\\\\Desktop\\\\App\\\\kanban-board\\\\src\\\\components\\\\Column.js\";\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport { Paper, Typography } from '@mui/material';\nimport TaskCard from './TaskCard';\nimport { useDispatch } from 'react-redux';\nimport { moveTask } from '../redux/actions';\nconst Column = ({\n  title,\n  tasks,\n  stage\n}) => {\n  const dispatch = useDispatch();\n  const [, drop] = useDrop(() => ({\n    accept: 'TASK',\n    drop: item => handleDrop(item.id)\n  }));\n  const handleDrop = id => {\n    dispatch(moveTask(id, stage));\n  };\n  return /*#__PURE__*/React.createElement(Paper, {\n    ref: drop,\n    style: {\n      padding: '16px',\n      minHeight: '400px',\n      backgroundColor: '#f0f0f0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, title), tasks.map(task => /*#__PURE__*/React.createElement(TaskCard, Object.assign({\n    key: task.id\n  }, task, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }))));\n};\nexport default Column;","map":{"version":3,"names":["React","useDrop","Paper","Typography","TaskCard","useDispatch","moveTask","Column","title","tasks","stage","dispatch","drop","accept","item","handleDrop","id","createElement","ref","style","padding","minHeight","backgroundColor","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","map","task","Object","assign","key"],"sources":["C:/Users/vijay/OneDrive/Desktop/App/kanban-board/src/components/Column.js"],"sourcesContent":["import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { Paper, Typography } from '@mui/material';\r\nimport TaskCard from './TaskCard';\r\nimport { useDispatch } from 'react-redux';\r\nimport { moveTask } from '../redux/actions';\r\n\r\nconst Column = ({ title, tasks, stage }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [, drop] = useDrop(() => ({\r\n    accept: 'TASK',\r\n    drop: (item) => handleDrop(item.id),\r\n  }));\r\n\r\n  const handleDrop = (id) => {\r\n    dispatch(moveTask(id, stage));\r\n  };\r\n\r\n  return (\r\n    <Paper ref={drop} style={{ padding: '16px', minHeight: '400px', backgroundColor: '#f0f0f0' }}>\r\n      <Typography variant=\"h5\" gutterBottom>{title}</Typography>\r\n      {tasks.map(task => (\r\n        <TaskCard key={task.id} {...task} />\r\n      ))}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AACjD,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAC1C,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAM,GAAGO,IAAI,CAAC,GAAGX,OAAO,CAAC,OAAO;IAC9BY,MAAM,EAAE,MAAM;IACdD,IAAI,EAAGE,IAAI,IAAKC,UAAU,CAACD,IAAI,CAACE,EAAE;EACpC,CAAC,CAAC,CAAC;EAEH,MAAMD,UAAU,GAAIC,EAAE,IAAK;IACzBL,QAAQ,CAACL,QAAQ,CAACU,EAAE,EAAEN,KAAK,CAAC,CAAC;EAC/B,CAAC;EAED,oBACEV,KAAA,CAAAiB,aAAA,CAACf,KAAK;IAACgB,GAAG,EAAEN,IAAK;IAACO,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE,OAAO;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3F5B,KAAA,CAAAiB,aAAA,CAACd,UAAU;IAAC0B,OAAO,EAAC,IAAI;IAACC,YAAY;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEpB,KAAkB,CAAC,EACzDC,KAAK,CAACsB,GAAG,CAACC,IAAI,iBACbhC,KAAA,CAAAiB,aAAA,CAACb,QAAQ,EAAA6B,MAAA,CAAAC,MAAA;IAACC,GAAG,EAAEH,IAAI,CAAChB;EAAG,GAAKgB,IAAI;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CACpC,CACI,CAAC;AAEZ,CAAC;AAED,eAAerB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}